# set colors
set-option -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set-option -s set-clipboard off
set-option xterm-keys on

set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Set reload key to r
bind r source-file ~/.tmux.conf

# Count sessions start at 1
set -g base-index 1

set-option -g prefix C-f
bind-key C-f send-prefix
unbind-key C-b

# Use vim bindings
setw -g mode-keys vi

# Remap window navigation to vim

#bind -n M-s split-window -h
#bind -n M-d split-window -v

bind c new-window -c "#{pane_current_path}"
# split panes using | and -
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# use -b instead of -z because C-z is useful for backgrounding vim
bind-key -n C-b resize-pane -Z

# Use Alt-vim keys without prefix key to switch panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# # Vi copypaste
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
#bind-key -T copy-mode-vi y send -X copy-selection
#bind-key -T copy-mode-vi y copy-pipe 'pbcopy'
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Set the title bar
set -g set-titles on
set -g set-titles-string '#(whoami) :: #h :: #(curl ipecho.net/plain;echo)'

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-interval 5 
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s)#[fg=white]::#[fg=yellow]#(curl ipecho.net/plain;echo) >> "
set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'

#-------------------------------------------------------#
# Default inactive/active window styles
#-------------------------------------------------------#
# set -g window-style 'fg=default,bg=default'
# set -g window-active-style 'fg=default,bg=default'
#-------------------------------------------------------#
set-window-option -g window-status-style fg=colour244,bg=default
# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright
# window colors
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
# pane borders
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour12

# pomodoro plugin
set -g status-right "#{pomodoro_status}"
set -g @pomodoro_mins 25
set -g @pomodoro_break_mins 5
set -g @pomodoro_on " #[fg=$text_red]üçÖ "
set -g @pomodoro_complete " #[fg=$text_green]üçÖ "
# keybindings
set -g @pomodoro_start 'a'
set -g @pomodoro_cancel 'A'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
